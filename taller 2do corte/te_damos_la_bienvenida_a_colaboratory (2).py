# -*- coding: utf-8 -*-
"""Te damos la bienvenida a Colaboratory

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

compras = ["Leche", "Pan"]
compras.append("Huevos")
compras.pop(1)

print(compras)

Nombre = input("Ingrese su nombre: ")
print(Nombre)
Edad = input("Ingrese su edad: ")
print(Edad)

# Crear el diccionario con nombre y edad
Usuario = {
    "Nombre": Nombre,
    "Edad": Edad
}

# Mostrar el diccionario
print(Usuario)

# Actualizar la edad del usuario
Edad = input("Ingrese su nueva edad: ")
Usuario["Edad"] = Edad

# Añadir una nueva clave "Ciudad"
Ciudad = input("Ingrese su Ciudad: ")
Usuario["Ciudad"] = Ciudad

# Mostrar el diccionario actualizado
print("Diccionario actualizado: ", Usuario)

# Almacenar las coordenadas en una tupla
coordenadas = (40.4168, -3.7038)

# Desempaquetar la tupla en dos variables
latitud, longitud = coordenadas

# Imprimir los valores
print("Latitud:", latitud)
print("Longitud:", longitud)

#Almacenar las temperaturas en una lista
Temperaturas = [22.5, 24.0, 21.8, 25.1, 23.9, 22.7, 21.5]

# Calcular el promedio
Promedio = sum(Temperaturas) / len(Temperaturas)

# Mostrar el promedio
print("El promedio de las temperaturas es:", round(Promedio, 2), "°C")

# Diccionario inglés - español
traductor = {
    "hello": "hola",
    "goodbye": "adiós",
    "thank you": "gracias",
    "please": "por favor",
    "cat": "gato",
    "dog": "perro"
}

# Pedir palabra en inglés
palabra = input("Ingresa una palabra en inglés: ").lower()

# Buscar y mostrar la traducción si existe
if palabra in traductor:
    print(f"La traducción de '{palabra}' es: {traductor[palabra]}")
else:
    print("Lo siento, esa palabra no está en el diccionario.")

# Tupla de tuplas con materia y hora
horario = (
    ("Matemáticas", "08:00 - 09:00"),
    ("Historia", "09:15 - 10:15"),
    ("Ciencias", "10:30 - 11:30"),
    ("Inglés", "11:45 - 12:45"),
    ("Educación Física", "13:00 - 14:00")
)

# Recorrer e imprimir el horario
for materia, hora in horario:
    print(f"Clase: {materia} | Hora: {hora}")

# Listas de invitados
invitados_dia = ["Ana", "Luis", "Marta", "Pedro"]
invitados_noche = ["Luis", "Sofía", "Ana", "Juan"]

# Combinar listas y eliminar duplicados
invitados_unicos = list(set(invitados_dia + invitados_noche))

# Mostrar la lista combinada
print("Lista combinada sin repetidos:", invitados_unicos)

# Lista de diccionarios que representa el inventario
inventario = [
    {"nombre": "manzana", "precio": 0.5, "stock": 100},
    {"nombre": "banana", "precio": 0.3, "stock": 150},
    {"nombre": "naranja", "precio": 0.7, "stock": 80},
    {"nombre": "pera", "precio": 0.6, "stock": 50}
]

# Función para buscar producto por nombre
def buscar_producto(nombre_producto):
    for producto in inventario:
        if producto["nombre"].lower() == nombre_producto.lower():
            return producto
    return None  # Si no se encuentra el producto

# Pedir al usuario el nombre del producto a buscar
nombre = input("Ingrese el nombre del producto que desea buscar: ")

# Buscar el producto y mostrar resultado
resultado = buscar_producto(nombre)
if resultado:
    print("Producto encontrado:")
    print(f"Nombre: {resultado['nombre']}")
    print(f"Precio: ${resultado['precio']}")
    print(f"Stock: {resultado['stock']} unidades")
else:
    print("Producto no encontrado en el inventario.")

# Diccionario con estudiantes y sus listas de notas
estudiantes = {
    "Ana": [8.5, 7.0, 9.0],
    "Luis": [6.0, 7.5, 8.0],
    "Marta": [9.0, 9.5, 10.0]
}

# Pedir el nombre del estudiante y la nueva nota
nombre_estudiante = input("Ingrese el nombre del estudiante: ")
nueva_nota = float(input("Ingrese la nueva nota: "))

# Verificar si el estudiante existe y añadir la nota
if nombre_estudiante in estudiantes:
    estudiantes[nombre_estudiante].append(nueva_nota)
    print(f"Nota añadida a {nombre_estudiante}.")
else:
    print("El estudiante no existe en el diccionario.")

# Mostrar el diccionario actualizado
print(estudiantes)

# Lista original de números
numeros = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Crear una nueva lista solo con números pares usando lista por comprensión
numeros_pares = [num for num in numeros if num % 2 == 0]

# Mostrar la nueva lista
print("Números pares:", numeros_pares)

# Lista de diccionarios con estudiantes
estudiantes = [
    {"nombre": "Ana", "promedio": 4.5, "curso": "10A"},
    {"nombre": "Luis", "promedio": 3.8, "curso": "10B"},
    {"nombre": "Marta", "promedio": 4.8, "curso": "10A"},
    {"nombre": "Pedro", "promedio": 3.9, "curso": "10C"},
    {"nombre": "Sofía", "promedio": 4.2, "curso": "10B"}
]

# Crear nueva lista con nombres de estudiantes con promedio > 4.0
estudiantes_destacados = [est["nombre"] for est in estudiantes if est["promedio"] > 4.0]

# Mostrar la lista resultante
print("Estudiantes con promedio superior a 4.0:", estudiantes_destacados)

# Lista de tuplas con ventas (producto, categoría, monto)
ventas = [
    ("Laptop", "Electrónica", 1500),
    ("Camisa", "Ropa", 80),
    ("Mouse", "Electrónica", 50),
    ("Pantalón", "Ropa", 120),
    ("Teclado", "Electrónica", 70)
]

# Diccionario para almacenar total por categoría
total_ventas_categoria = {}

# Recorrer las ventas y acumular montos por categoría
for producto, categoria, monto in ventas:
    if categoria in total_ventas_categoria:
        total_ventas_categoria[categoria] += monto
    else:
        total_ventas_categoria[categoria] = monto

# Mostrar resultado
print("Total de ventas por categoría:")
for categoria, total in total_ventas_categoria.items():
    print(f"{categoria}: ${total}")

libro = {
    "titulo": "Python para Todos",
    "año": 2024,
    "autores": [
        {"nombre": "Raúl", "nacionalidad": "Española"},
        {"nombre": "Laura", "nacionalidad": "Mexicana"}
    ],
    "editorial": "Ediciones Código"
}

# Crear lista solo con los nombres de los autores
nombres_autores = [autor["nombre"] for autor in libro["autores"]]

# Mostrar la lista de nombres
print("Nombres de los autores:", nombres_autores)

productos = {
    101: "Leche",
    102: "Pan",
    103: "Huevos"
}

precios = {
    101: 4500,
    102: 2500,
    103: 8000
}

ventas_del_dia = [
    (101, 5),  # Se vendieron 5 unidades de Leche
    (102, 10), # Se vendieron 10 unidades de Pan
    (101, 3),  # Se vendieron otras 3 unidades de Leche
    (103, 2)   # Se vendieron 2 unidades de Huevos
]

# Calcular ingreso total
ingreso_total = 0

for producto_id, cantidad in ventas_del_dia:
    precio_unitario = precios.get(producto_id, 0)
    ingreso_total += precio_unitario * cantidad

print(f"Ingreso total del día: ${ingreso_total}")